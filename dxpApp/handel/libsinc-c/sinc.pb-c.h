/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: sinc.proto */

#ifndef PROTOBUF_C_sinc_2eproto__INCLUDED
#define PROTOBUF_C_sinc_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1001000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SiToro__Sinc__SuccessResponse SiToro__Sinc__SuccessResponse;
typedef struct _SiToro__Sinc__PingCommand SiToro__Sinc__PingCommand;
typedef struct _SiToro__Sinc__KeyValue SiToro__Sinc__KeyValue;
typedef struct _SiToro__Sinc__GetParamCommand SiToro__Sinc__GetParamCommand;
typedef struct _SiToro__Sinc__GetParamResponse SiToro__Sinc__GetParamResponse;
typedef struct _SiToro__Sinc__ParamUpdatedResponse SiToro__Sinc__ParamUpdatedResponse;
typedef struct _SiToro__Sinc__SetParamCommand SiToro__Sinc__SetParamCommand;
typedef struct _SiToro__Sinc__StartHistogramCommand SiToro__Sinc__StartHistogramCommand;
typedef struct _SiToro__Sinc__StartListModeCommand SiToro__Sinc__StartListModeCommand;
typedef struct _SiToro__Sinc__StartOscilloscopeCommand SiToro__Sinc__StartOscilloscopeCommand;
typedef struct _SiToro__Sinc__HistogramDataResponse SiToro__Sinc__HistogramDataResponse;
typedef struct _SiToro__Sinc__ListModeDataResponse SiToro__Sinc__ListModeDataResponse;
typedef struct _SiToro__Sinc__OscilloscopePlot SiToro__Sinc__OscilloscopePlot;
typedef struct _SiToro__Sinc__OscilloscopeDataResponse SiToro__Sinc__OscilloscopeDataResponse;
typedef struct _SiToro__Sinc__StopDataAcquisitionCommand SiToro__Sinc__StopDataAcquisitionCommand;
typedef struct _SiToro__Sinc__ClearHistogramCommand SiToro__Sinc__ClearHistogramCommand;
typedef struct _SiToro__Sinc__ResetSpatialSystemCommand SiToro__Sinc__ResetSpatialSystemCommand;
typedef struct _SiToro__Sinc__StartCalibrationCommand SiToro__Sinc__StartCalibrationCommand;
typedef struct _SiToro__Sinc__CalibrationProgressResponse SiToro__Sinc__CalibrationProgressResponse;
typedef struct _SiToro__Sinc__GetCalibrationCommand SiToro__Sinc__GetCalibrationCommand;
typedef struct _SiToro__Sinc__GetCalibrationResponse SiToro__Sinc__GetCalibrationResponse;
typedef struct _SiToro__Sinc__SetCalibrationCommand SiToro__Sinc__SetCalibrationCommand;
typedef struct _SiToro__Sinc__CalculateDcOffsetCommand SiToro__Sinc__CalculateDcOffsetCommand;
typedef struct _SiToro__Sinc__CalculateDcOffsetResponse SiToro__Sinc__CalculateDcOffsetResponse;
typedef struct _SiToro__Sinc__ListParamDetailsCommand SiToro__Sinc__ListParamDetailsCommand;
typedef struct _SiToro__Sinc__ParamDetails SiToro__Sinc__ParamDetails;
typedef struct _SiToro__Sinc__ListParamDetailsResponse SiToro__Sinc__ListParamDetailsResponse;
typedef struct _SiToro__Sinc__StartFFTCommand SiToro__Sinc__StartFFTCommand;
typedef struct _SiToro__Sinc__RestartCommand SiToro__Sinc__RestartCommand;
typedef struct _SiToro__Sinc__SoftwareUpdateFile SiToro__Sinc__SoftwareUpdateFile;
typedef struct _SiToro__Sinc__SoftwareUpdateCommand SiToro__Sinc__SoftwareUpdateCommand;
typedef struct _SiToro__Sinc__SoftwareUpdateCompleteResponse SiToro__Sinc__SoftwareUpdateCompleteResponse;
typedef struct _SiToro__Sinc__SaveConfigurationCommand SiToro__Sinc__SaveConfigurationCommand;
typedef struct _SiToro__Sinc__AsynchronousErrorResponse SiToro__Sinc__AsynchronousErrorResponse;
typedef struct _SiToro__Sinc__MonitorChannelsCommand SiToro__Sinc__MonitorChannelsCommand;
typedef struct _SiToro__Sinc__ProbeDatagramCommand SiToro__Sinc__ProbeDatagramCommand;
typedef struct _SiToro__Sinc__DownloadCrashDumpCommand SiToro__Sinc__DownloadCrashDumpCommand;
typedef struct _SiToro__Sinc__DownloadCrashDumpResponse SiToro__Sinc__DownloadCrashDumpResponse;
typedef struct _SiToro__Sinc__CheckParamConsistencyCommand SiToro__Sinc__CheckParamConsistencyCommand;
typedef struct _SiToro__Sinc__CheckParamConsistencyResponse SiToro__Sinc__CheckParamConsistencyResponse;
typedef struct _SiToro__Sinc__TriggerHistogramCommand SiToro__Sinc__TriggerHistogramCommand;
typedef struct _SiToro__Sinc__Timestamp SiToro__Sinc__Timestamp;
typedef struct _SiToro__Sinc__SynchronizeLogCommand SiToro__Sinc__SynchronizeLogCommand;
typedef struct _SiToro__Sinc__LogEntry SiToro__Sinc__LogEntry;
typedef struct _SiToro__Sinc__SynchronizeLogResponse SiToro__Sinc__SynchronizeLogResponse;
typedef struct _SiToro__Sinc__SetTimeCommand SiToro__Sinc__SetTimeCommand;


/* --- enums --- */

typedef enum _SiToro__Sinc__KeyValue__ParamType {
  SI_TORO__SINC__KEY_VALUE__PARAM_TYPE__NO_TYPE = 0,
  SI_TORO__SINC__KEY_VALUE__PARAM_TYPE__INT_TYPE = 1,
  SI_TORO__SINC__KEY_VALUE__PARAM_TYPE__FLOAT_TYPE = 2,
  SI_TORO__SINC__KEY_VALUE__PARAM_TYPE__BOOL_TYPE = 3,
  SI_TORO__SINC__KEY_VALUE__PARAM_TYPE__STRING_TYPE = 4,
  SI_TORO__SINC__KEY_VALUE__PARAM_TYPE__OPTION_TYPE = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SI_TORO__SINC__KEY_VALUE__PARAM_TYPE)
} SiToro__Sinc__KeyValue__ParamType;
/*
 * Error codes.
 */
typedef enum _SiToro__Sinc__ErrorCode {
  SI_TORO__SINC__ERROR_CODE__NO_ERROR = 0,
  SI_TORO__SINC__ERROR_CODE__OUT_OF_MEMORY = 10000,
  SI_TORO__SINC__ERROR_CODE__UNIMPLEMENTED = 10001,
  SI_TORO__SINC__ERROR_CODE__NOT_FOUND = 10002,
  SI_TORO__SINC__ERROR_CODE__BAD_PARAMETERS = 10003,
  SI_TORO__SINC__ERROR_CODE__HOST_NOT_FOUND = 10004,
  SI_TORO__SINC__ERROR_CODE__OUT_OF_RESOURCES = 10005,
  SI_TORO__SINC__ERROR_CODE__CONNECTION_FAILED = 10006,
  SI_TORO__SINC__ERROR_CODE__READ_FAILED = 10007,
  SI_TORO__SINC__ERROR_CODE__WRITE_FAILED = 10008,
  SI_TORO__SINC__ERROR_CODE__COMMAND_FAILED = 10009,
  SI_TORO__SINC__ERROR_CODE__SOCKET_CLOSED_UNEXPECTEDLY = 10010,
  SI_TORO__SINC__ERROR_CODE__TIMEOUT = 10011,
  SI_TORO__SINC__ERROR_CODE__HOST_UNREACHABLE = 10012,
  SI_TORO__SINC__ERROR_CODE__AUTHORIZATION_FAILED = 10013,
  /*
   * A generic unexpected device error.
   */
  SI_TORO__SINC__ERROR_CODE__DEVICE_ERROR = 10014,
  /*
   * Used for corrupted request packets.
   */
  SI_TORO__SINC__ERROR_CODE__INVALID_REQUEST = 10015,
  /*
   * Operation halted because instrument has switched to histogram gated mode.
   */
  SI_TORO__SINC__ERROR_CODE__NON_GATED_HISTOGRAM_DISABLED = 10016,
  SI_TORO__SINC__ERROR_CODE__NOT_CONNECTED = 10017,
  /*
   * Multiple threads are waiting on the same connection. This is a protocol violation.
   */
  SI_TORO__SINC__ERROR_CODE__MULTIPLE_THREAD_WAIT = 10018
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SI_TORO__SINC__ERROR_CODE)
} SiToro__Sinc__ErrorCode;
/*
 * Message types.
 */
typedef enum _SiToro__Sinc__MessageType {
  SI_TORO__SINC__MESSAGE_TYPE__NO_MESSAGE_TYPE = 0,
  SI_TORO__SINC__MESSAGE_TYPE__SUCCESS_RESPONSE = 1,
  SI_TORO__SINC__MESSAGE_TYPE__PING_COMMAND = 2,
  SI_TORO__SINC__MESSAGE_TYPE__GET_PARAM_COMMAND = 3,
  SI_TORO__SINC__MESSAGE_TYPE__GET_PARAM_RESPONSE = 4,
  SI_TORO__SINC__MESSAGE_TYPE__SET_PARAM_COMMAND = 5,
  SI_TORO__SINC__MESSAGE_TYPE__START_HISTOGRAM_COMMAND = 8,
  SI_TORO__SINC__MESSAGE_TYPE__START_LIST_MODE_COMMAND = 9,
  SI_TORO__SINC__MESSAGE_TYPE__START_OSCILLOSCOPE_COMMAND = 10,
  SI_TORO__SINC__MESSAGE_TYPE__HISTOGRAM_DATA_RESPONSE = 11,
  SI_TORO__SINC__MESSAGE_TYPE__LIST_MODE_DATA_RESPONSE = 12,
  SI_TORO__SINC__MESSAGE_TYPE__OSCILLOSCOPE_DATA_RESPONSE = 13,
  SI_TORO__SINC__MESSAGE_TYPE__STOP_DATA_ACQUISITION_COMMAND = 14,
  SI_TORO__SINC__MESSAGE_TYPE__RESET_SPATIAL_SYSTEM_COMMAND = 15,
  SI_TORO__SINC__MESSAGE_TYPE__START_CALIBRATION_COMMAND = 16,
  SI_TORO__SINC__MESSAGE_TYPE__CALIBRATION_PROGRESS_RESPONSE = 17,
  SI_TORO__SINC__MESSAGE_TYPE__GET_CALIBRATION_COMMAND = 18,
  SI_TORO__SINC__MESSAGE_TYPE__GET_CALIBRATION_RESPONSE = 19,
  SI_TORO__SINC__MESSAGE_TYPE__SET_CALIBRATION_COMMAND = 20,
  SI_TORO__SINC__MESSAGE_TYPE__CALCULATE_DC_OFFSET_COMMAND = 21,
  SI_TORO__SINC__MESSAGE_TYPE__CALCULATE_DC_OFFSET_RESPONSE = 22,
  SI_TORO__SINC__MESSAGE_TYPE__CLEAR_HISTOGRAM_COMMAND = 23,
  SI_TORO__SINC__MESSAGE_TYPE__LIST_PARAM_DETAILS_COMMAND = 24,
  SI_TORO__SINC__MESSAGE_TYPE__LIST_PARAM_DETAILS_RESPONSE = 25,
  SI_TORO__SINC__MESSAGE_TYPE__PARAM_UPDATED_RESPONSE = 26,
  SI_TORO__SINC__MESSAGE_TYPE__START_FFT_COMMAND = 27,
  SI_TORO__SINC__MESSAGE_TYPE__RESTART_COMMAND = 28,
  SI_TORO__SINC__MESSAGE_TYPE__SOFTWARE_UPDATE_COMMAND = 29,
  SI_TORO__SINC__MESSAGE_TYPE__SOFTWARE_UPDATE_COMPLETE_RESPONSE = 30,
  SI_TORO__SINC__MESSAGE_TYPE__SAVE_CONFIGURATION_COMMAND = 31,
  SI_TORO__SINC__MESSAGE_TYPE__ASYNCHRONOUS_ERROR_RESPONSE = 32,
  SI_TORO__SINC__MESSAGE_TYPE__MONITOR_CHANNELS_COMMAND = 33,
  /*
   * 34 and 35 are reserved.
   */
  SI_TORO__SINC__MESSAGE_TYPE__PROBE_DATAGRAM_COMMAND = 36,
  SI_TORO__SINC__MESSAGE_TYPE__PROBE_DATAGRAM_RESPONSE = 37,
  SI_TORO__SINC__MESSAGE_TYPE__HISTOGRAM_DATAGRAM_RESPONSE = 38,
  SI_TORO__SINC__MESSAGE_TYPE__DOWNLOAD_CRASH_DUMP_COMMAND = 39,
  SI_TORO__SINC__MESSAGE_TYPE__DOWNLOAD_CRASH_DUMP_RESPONSE = 40,
  SI_TORO__SINC__MESSAGE_TYPE__CHECK_PARAM_CONSISTENCY_COMMAND = 41,
  SI_TORO__SINC__MESSAGE_TYPE__CHECK_PARAM_CONSISTENCY_RESPONSE = 42,
  SI_TORO__SINC__MESSAGE_TYPE__TRIGGER_HISTOGRAM_COMMAND = 43,
  SI_TORO__SINC__MESSAGE_TYPE__SYNCHRONIZE_LOG_COMMAND = 44,
  SI_TORO__SINC__MESSAGE_TYPE__SYNCHRONIZE_LOG_RESPONSE = 45,
  SI_TORO__SINC__MESSAGE_TYPE__SET_TIME_COMMAND = 46
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SI_TORO__SINC__MESSAGE_TYPE)
} SiToro__Sinc__MessageType;
/*
 * Indicates whether a parameter attribute is associated with a channel, the instrument or the current connection.
 */
typedef enum _SiToro__Sinc__Subsystem {
  SI_TORO__SINC__SUBSYSTEM__CHANNEL = 1,
  SI_TORO__SINC__SUBSYSTEM__INSTRUMENT = 2,
  SI_TORO__SINC__SUBSYSTEM__CONNECTION = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SI_TORO__SINC__SUBSYSTEM)
} SiToro__Sinc__Subsystem;
/*
 * Indicates the type of event which triggered a histogram transmission.
 */
typedef enum _SiToro__Sinc__HistogramTrigger {
  SI_TORO__SINC__HISTOGRAM_TRIGGER__REFRESH_UPDATE = 0,
  SI_TORO__SINC__HISTOGRAM_TRIGGER__GATE_CHANGE = 1,
  SI_TORO__SINC__HISTOGRAM_TRIGGER__SPATIAL_CHANGE = 2,
  SI_TORO__SINC__HISTOGRAM_TRIGGER__CONDITION_COMPLETE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SI_TORO__SINC__HISTOGRAM_TRIGGER)
} SiToro__Sinc__HistogramTrigger;
/*
 * LogLevel indicates the severity level of a log message.
 */
typedef enum _SiToro__Sinc__LogLevel {
  SI_TORO__SINC__LOG_LEVEL__FATAL = 1,
  SI_TORO__SINC__LOG_LEVEL__ALARM = 2,
  SI_TORO__SINC__LOG_LEVEL__ERROR = 3,
  SI_TORO__SINC__LOG_LEVEL__WARNING = 4,
  SI_TORO__SINC__LOG_LEVEL__INFO = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SI_TORO__SINC__LOG_LEVEL)
} SiToro__Sinc__LogLevel;
typedef enum _SiToro__Sinc__SiToroHistogramMode {
  SI_TORO__SINC__SI_TORO__HISTOGRAM_MODE__SiToro_HistogramMode_Continuous = 0,
  SI_TORO__SINC__SI_TORO__HISTOGRAM_MODE__SiToro_HistogramMode_FixedTime = 1,
  SI_TORO__SINC__SI_TORO__HISTOGRAM_MODE__SiToro_HistogramMode_FixedInputCount = 2,
  SI_TORO__SINC__SI_TORO__HISTOGRAM_MODE__SiToro_HistogramMode_FixedOutputCount = 3,
  SI_TORO__SINC__SI_TORO__HISTOGRAM_MODE__SiToro_HistogramMode_MovingAverage = 4,
  SI_TORO__SINC__SI_TORO__HISTOGRAM_MODE__SiToro_HistogramMode_Gated = 5,
  SI_TORO__SINC__SI_TORO__HISTOGRAM_MODE__SiToro_HistogramMode_Spatial = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SI_TORO__SINC__SI_TORO__HISTOGRAM_MODE)
} SiToro__Sinc__SiToroHistogramMode;

/* --- messages --- */

struct  _SiToro__Sinc__SuccessResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_errorcode;
  SiToro__Sinc__ErrorCode errorcode;
  char *message;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__SUCCESS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__success_response__descriptor) \
    , 0,0, NULL, 0,0 }


struct  _SiToro__Sinc__PingCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_verbose;
  protobuf_c_boolean verbose;
};
#define SI_TORO__SINC__PING_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__ping_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__KeyValue
{
  ProtobufCMessage base;
  char *key;
  /*
   * If specified, indicates which channel to use,
   */
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  /*
   * One of these will be set depending on the type.
   */
  protobuf_c_boolean has_intval;
  int64_t intval;
  protobuf_c_boolean has_floatval;
  double floatval;
  protobuf_c_boolean has_boolval;
  protobuf_c_boolean boolval;
  /*
   * strVal is always set in responses from the instrument with a string form of the value.
   */
  char *strval;
  char *optionval;
  /*
   * The type of the parameter. This will reflect which one of the xxxVal fields is set.
   */
  protobuf_c_boolean has_paramtype;
  SiToro__Sinc__KeyValue__ParamType paramtype;
};
#define SI_TORO__SINC__KEY_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__key_value__descriptor) \
    , NULL, 0,0, 0,0, 0,0, 0,0, NULL, NULL, 0,0 }


struct  _SiToro__Sinc__GetParamCommand
{
  ProtobufCMessage base;
  char *key;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  size_t n_chankeys;
  SiToro__Sinc__KeyValue **chankeys;
};
#define SI_TORO__SINC__GET_PARAM_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__get_param_command__descriptor) \
    , NULL, 0,0, 0,NULL }


struct  _SiToro__Sinc__GetParamResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
  size_t n_results;
  SiToro__Sinc__KeyValue **results;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__GET_PARAM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__get_param_response__descriptor) \
    , NULL, 0,NULL, 0,0 }


struct  _SiToro__Sinc__ParamUpdatedResponse
{
  ProtobufCMessage base;
  size_t n_params;
  SiToro__Sinc__KeyValue **params;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__PARAM_UPDATED_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__param_updated_response__descriptor) \
    , 0,NULL, 0,0 }


struct  _SiToro__Sinc__SetParamCommand
{
  ProtobufCMessage base;
  /*
   * deprecated.
   */
  SiToro__Sinc__KeyValue *param;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  size_t n_params;
  SiToro__Sinc__KeyValue **params;
  protobuf_c_boolean has_settingallparams;
  protobuf_c_boolean settingallparams;
  char *fromfirmwareversion;
};
#define SI_TORO__SINC__SET_PARAM_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__set_param_command__descriptor) \
    , NULL, 0,0, 0,NULL, 0,0, NULL }


struct  _SiToro__Sinc__StartHistogramCommand
{
  ProtobufCMessage base;
  /*
   * Set to 0.
   */
  uint32_t reserved;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_numbins;
  uint32_t numbins;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_mode;
  SiToro__Sinc__SiToroHistogramMode mode;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_target;
  uint32_t target;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_spectrumselectionmask;
  uint32_t spectrumselectionmask;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_binsubregionlowbinindex;
  uint32_t binsubregionlowbinindex;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_binsubregionhighbinindex;
  uint32_t binsubregionhighbinindex;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_refreshrate;
  uint32_t refreshrate;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_senddataresults;
  protobuf_c_boolean senddataresults;
  /*
   * Deprecated.
   */
  size_t n_option;
  char **option;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__START_HISTOGRAM_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__start_histogram_command__descriptor) \
    , 0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0 }


struct  _SiToro__Sinc__StartListModeCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__START_LIST_MODE_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__start_list_mode_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__StartOscilloscopeCommand
{
  ProtobufCMessage base;
  uint32_t reserved;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_samples;
  uint32_t samples;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_runcontinuously;
  protobuf_c_boolean runcontinuously;
  /*
   * Deprecated.
   */
  protobuf_c_boolean has_senddataresults;
  protobuf_c_boolean senddataresults;
  /*
   * Deprecated.
   */
  size_t n_option;
  char **option;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__START_OSCILLOSCOPE_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__start_oscilloscope_command__descriptor) \
    , 0, 0,0, 0,0, 0,0, 0,NULL, 0,0 }


struct  _SiToro__Sinc__HistogramDataResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_datasetid;
  uint64_t datasetid;
  protobuf_c_boolean has_timeelapsed;
  double timeelapsed;
  protobuf_c_boolean has_samplesdetected;
  uint64_t samplesdetected;
  protobuf_c_boolean has_sampleserased;
  uint64_t sampleserased;
  protobuf_c_boolean has_pulsesaccepted;
  uint64_t pulsesaccepted;
  protobuf_c_boolean has_pulsesrejected;
  uint64_t pulsesrejected;
  protobuf_c_boolean has_inputcountrate;
  double inputcountrate;
  protobuf_c_boolean has_outputcountrate;
  double outputcountrate;
  protobuf_c_boolean has_deadtimepercent;
  double deadtimepercent;
  protobuf_c_boolean has_gatestate;
  uint32_t gatestate;
  protobuf_c_boolean has_spectrumselectionmask;
  uint32_t spectrumselectionmask;
  protobuf_c_boolean has_subregionstartindex;
  uint32_t subregionstartindex;
  protobuf_c_boolean has_subregionendindex;
  uint32_t subregionendindex;
  protobuf_c_boolean has_refreshrate;
  uint32_t refreshrate;
  size_t n_plotlen;
  uint32_t *plotlen;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  protobuf_c_boolean has_positiverailhitcount;
  uint32_t positiverailhitcount;
  protobuf_c_boolean has_negativerailhitcount;
  uint32_t negativerailhitcount;
  protobuf_c_boolean has_trigger;
  SiToro__Sinc__HistogramTrigger trigger;
  size_t n_intensity;
  uint32_t *intensity;
};
#define SI_TORO__SINC__HISTOGRAM_DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__histogram_data_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,NULL }


struct  _SiToro__Sinc__ListModeDataResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_datasetid;
  uint64_t datasetid;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  /*
   * internal use only.
   */
  protobuf_c_boolean has_syncmarker;
  protobuf_c_boolean syncmarker;
};
#define SI_TORO__SINC__LIST_MODE_DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__list_mode_data_response__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _SiToro__Sinc__OscilloscopePlot
{
  ProtobufCMessage base;
  size_t n_val;
  int32_t *val;
};
#define SI_TORO__SINC__OSCILLOSCOPE_PLOT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__oscilloscope_plot__descriptor) \
    , 0,NULL }


struct  _SiToro__Sinc__OscilloscopeDataResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_datasetid;
  uint64_t datasetid;
  /*
   * deprecated.
   */
  size_t n_plotlen;
  uint32_t *plotlen;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  protobuf_c_boolean has_minvaluerange;
  int32_t minvaluerange;
  protobuf_c_boolean has_maxvaluerange;
  int32_t maxvaluerange;
  size_t n_plots;
  SiToro__Sinc__OscilloscopePlot **plots;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_analysismode;
  protobuf_c_boolean analysismode;
};
#define SI_TORO__SINC__OSCILLOSCOPE_DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__oscilloscope_data_response__descriptor) \
    , 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,0 }


struct  _SiToro__Sinc__StopDataAcquisitionCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  protobuf_c_boolean has_skip;
  protobuf_c_boolean skip;
};
#define SI_TORO__SINC__STOP_DATA_ACQUISITION_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__stop_data_acquisition_command__descriptor) \
    , 0,0, 0,0 }


struct  _SiToro__Sinc__ClearHistogramCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__CLEAR_HISTOGRAM_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__clear_histogram_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__ResetSpatialSystemCommand
{
  ProtobufCMessage base;
};
#define SI_TORO__SINC__RESET_SPATIAL_SYSTEM_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__reset_spatial_system_command__descriptor) \
     }


struct  _SiToro__Sinc__StartCalibrationCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__START_CALIBRATION_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__start_calibration_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__CalibrationProgressResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
  protobuf_c_boolean has_progress;
  double progress;
  protobuf_c_boolean has_complete;
  protobuf_c_boolean complete;
  char *stage;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  protobuf_c_boolean has_skippable;
  protobuf_c_boolean skippable;
};
#define SI_TORO__SINC__CALIBRATION_PROGRESS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__calibration_progress_response__descriptor) \
    , NULL, 0,0, 0,0, NULL, 0,0, 0,0 }


struct  _SiToro__Sinc__GetCalibrationCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__GET_CALIBRATION_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__get_calibration_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__GetCalibrationResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  size_t n_examplex;
  double *examplex;
  size_t n_exampley;
  double *exampley;
  size_t n_modelx;
  double *modelx;
  size_t n_modely;
  double *modely;
  size_t n_finalx;
  double *finalx;
  size_t n_finaly;
  double *finaly;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__GET_CALIBRATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__get_calibration_response__descriptor) \
    , NULL, 0,{0,NULL}, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,0 }


struct  _SiToro__Sinc__SetCalibrationCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  size_t n_examplex;
  double *examplex;
  size_t n_exampley;
  double *exampley;
  size_t n_modelx;
  double *modelx;
  size_t n_modely;
  double *modely;
  size_t n_finalx;
  double *finalx;
  size_t n_finaly;
  double *finaly;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__SET_CALIBRATION_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__set_calibration_command__descriptor) \
    , 0,{0,NULL}, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,0 }


struct  _SiToro__Sinc__CalculateDcOffsetCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__CALCULATE_DC_OFFSET_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__calculate_dc_offset_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__CalculateDcOffsetResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
  protobuf_c_boolean has_dcoffset;
  double dcoffset;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__CALCULATE_DC_OFFSET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__calculate_dc_offset_response__descriptor) \
    , NULL, 0,0, 0,0 }


struct  _SiToro__Sinc__ListParamDetailsCommand
{
  ProtobufCMessage base;
  char *matchprefix;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__LIST_PARAM_DETAILS_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__list_param_details_command__descriptor) \
    , NULL, 0,0 }


struct  _SiToro__Sinc__ParamDetails
{
  ProtobufCMessage base;
  /*
   * The key and value of this parameter.
   */
  SiToro__Sinc__KeyValue *kv;
  /*
   * A readable text name for this parameter.
   */
  char *textname;
  /*
   * For numeric values, the minimum allowable value.
   */
  protobuf_c_boolean has_min;
  float min;
  /*
   * For numeric values, the maximum allowable value.
   */
  protobuf_c_boolean has_max;
  float max;
  /*
   * For numeric values, a hint to the UI on the increment to use.
   */
  protobuf_c_boolean has_inc;
  float inc;
  /*
   * The units of this parameter, if there are any.
   */
  char *units;
  /*
   * false if this field is read-only.
   */
  protobuf_c_boolean has_settable;
  protobuf_c_boolean settable;
  /*
   * true if this field relates to the specific board design, so will change between boards.
   */
  protobuf_c_boolean has_boardspecific;
  protobuf_c_boolean boardspecific;
  /*
   * A set of allowed values for option types.
   */
  size_t n_valuelist;
  char **valuelist;
  /*
   * true if this field is unique across the instrument, not the channel.
   */
  protobuf_c_boolean has_instrumentlevel;
  protobuf_c_boolean instrumentlevel;
  /*
   * Associates this parameter with a channel, the instrument or the current connection.
   */
  protobuf_c_boolean has_subsystem;
  SiToro__Sinc__Subsystem subsystem;
  /*
   * If provided this is the device's default value for this parameter.
   */
  SiToro__Sinc__KeyValue *defaultvalue;
  /*
   * For integer numeric values, the minimum allowable value. (Also available in min).
   */
  protobuf_c_boolean has_intmin;
  int64_t intmin;
  /*
   * For integer numeric values, the maximum allowable value. (Also available in max).
   */
  protobuf_c_boolean has_intmax;
  int64_t intmax;
  /*
   * For integer numeric values, a hint to the UI on the increment to use. (Also available in inc).
   */
  protobuf_c_boolean has_intinc;
  int64_t intinc;
};
#define SI_TORO__SINC__PARAM_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__param_details__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, NULL, 0,1, 0,0, 0,NULL, 0,0, 0,0, NULL, 0,0, 0,0, 0,0 }


struct  _SiToro__Sinc__ListParamDetailsResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
  size_t n_paramdetails;
  SiToro__Sinc__ParamDetails **paramdetails;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__LIST_PARAM_DETAILS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__list_param_details_response__descriptor) \
    , NULL, 0,NULL, 0,0 }


struct  _SiToro__Sinc__StartFFTCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__START_FFTCOMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__start_fftcommand__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__RestartCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_factorymode;
  protobuf_c_boolean factorymode;
};
#define SI_TORO__SINC__RESTART_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__restart_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__SoftwareUpdateFile
{
  ProtobufCMessage base;
  char *filename;
  protobuf_c_boolean has_content;
  ProtobufCBinaryData content;
};
#define SI_TORO__SINC__SOFTWARE_UPDATE_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__software_update_file__descriptor) \
    , NULL, 0,{0,NULL} }


struct  _SiToro__Sinc__SoftwareUpdateCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appimage;
  ProtobufCBinaryData appimage;
  char *appchecksum;
  protobuf_c_boolean has_fpgaimage;
  ProtobufCBinaryData fpgaimage;
  char *fpgachecksum;
  protobuf_c_boolean has_autorestart;
  protobuf_c_boolean autorestart;
  size_t n_updatefiles;
  SiToro__Sinc__SoftwareUpdateFile **updatefiles;
};
#define SI_TORO__SINC__SOFTWARE_UPDATE_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__software_update_command__descriptor) \
    , 0,{0,NULL}, NULL, 0,{0,NULL}, NULL, 0,1, 0,NULL }


struct  _SiToro__Sinc__SoftwareUpdateCompleteResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
};
#define SI_TORO__SINC__SOFTWARE_UPDATE_COMPLETE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__software_update_complete_response__descriptor) \
    , NULL }


struct  _SiToro__Sinc__SaveConfigurationCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  protobuf_c_boolean has_deleteconfig;
  protobuf_c_boolean deleteconfig;
};
#define SI_TORO__SINC__SAVE_CONFIGURATION_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__save_configuration_command__descriptor) \
    , 0,0, 0,0 }


struct  _SiToro__Sinc__AsynchronousErrorResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
};
#define SI_TORO__SINC__ASYNCHRONOUS_ERROR_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__asynchronous_error_response__descriptor) \
    , NULL }


struct  _SiToro__Sinc__MonitorChannelsCommand
{
  ProtobufCMessage base;
  size_t n_channelid;
  int32_t *channelid;
};
#define SI_TORO__SINC__MONITOR_CHANNELS_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__monitor_channels_command__descriptor) \
    , 0,NULL }


struct  _SiToro__Sinc__ProbeDatagramCommand
{
  ProtobufCMessage base;
};
#define SI_TORO__SINC__PROBE_DATAGRAM_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__probe_datagram_command__descriptor) \
     }


struct  _SiToro__Sinc__DownloadCrashDumpCommand
{
  ProtobufCMessage base;
  /*
   * deprecated.
   */
  char *timestamp;
};
#define SI_TORO__SINC__DOWNLOAD_CRASH_DUMP_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__download_crash_dump_command__descriptor) \
    , NULL }


struct  _SiToro__Sinc__DownloadCrashDumpResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
  protobuf_c_boolean has_content;
  ProtobufCBinaryData content;
  /*
   * deprecated.
   */
  char *timestamp;
  protobuf_c_boolean has_new_;
  protobuf_c_boolean new_;
};
#define SI_TORO__SINC__DOWNLOAD_CRASH_DUMP_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__download_crash_dump_response__descriptor) \
    , NULL, 0,{0,NULL}, NULL, 0,0 }


struct  _SiToro__Sinc__CheckParamConsistencyCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
};
#define SI_TORO__SINC__CHECK_PARAM_CONSISTENCY_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__check_param_consistency_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__CheckParamConsistencyResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
  protobuf_c_boolean has_healthy;
  protobuf_c_boolean healthy;
  char *badkey;
  char *message;
};
#define SI_TORO__SINC__CHECK_PARAM_CONSISTENCY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__check_param_consistency_response__descriptor) \
    , NULL, 0,0, NULL, NULL }


struct  _SiToro__Sinc__TriggerHistogramCommand
{
  ProtobufCMessage base;
};
#define SI_TORO__SINC__TRIGGER_HISTOGRAM_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__trigger_histogram_command__descriptor) \
     }


struct  _SiToro__Sinc__Timestamp
{
  ProtobufCMessage base;
  protobuf_c_boolean has_seconds;
  int64_t seconds;
  protobuf_c_boolean has_microseconds;
  int32_t microseconds;
};
#define SI_TORO__SINC__TIMESTAMP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__timestamp__descriptor) \
    , 0,0, 0,0 }


struct  _SiToro__Sinc__SynchronizeLogCommand
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lastsequenceno;
  uint64_t lastsequenceno;
};
#define SI_TORO__SINC__SYNCHRONIZE_LOG_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__synchronize_log_command__descriptor) \
    , 0,0 }


struct  _SiToro__Sinc__LogEntry
{
  ProtobufCMessage base;
  protobuf_c_boolean has_sequenceno;
  uint64_t sequenceno;
  protobuf_c_boolean has_level;
  SiToro__Sinc__LogLevel level;
  protobuf_c_boolean has_errorcode;
  SiToro__Sinc__ErrorCode errorcode;
  char *message;
  protobuf_c_boolean has_channelid;
  int32_t channelid;
  SiToro__Sinc__Timestamp *hosttime;
};
#define SI_TORO__SINC__LOG_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__log_entry__descriptor) \
    , 0,0, 0,0, 0,0, NULL, 0,0, NULL }


struct  _SiToro__Sinc__SynchronizeLogResponse
{
  ProtobufCMessage base;
  SiToro__Sinc__SuccessResponse *success;
  size_t n_log;
  SiToro__Sinc__LogEntry **log;
};
#define SI_TORO__SINC__SYNCHRONIZE_LOG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__synchronize_log_response__descriptor) \
    , NULL, 0,NULL }


struct  _SiToro__Sinc__SetTimeCommand
{
  ProtobufCMessage base;
  SiToro__Sinc__Timestamp *hosttime;
};
#define SI_TORO__SINC__SET_TIME_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&si_toro__sinc__set_time_command__descriptor) \
    , NULL }


/* SiToro__Sinc__SuccessResponse methods */
void   si_toro__sinc__success_response__init
                     (SiToro__Sinc__SuccessResponse         *message);
size_t si_toro__sinc__success_response__get_packed_size
                     (const SiToro__Sinc__SuccessResponse   *message);
size_t si_toro__sinc__success_response__pack
                     (const SiToro__Sinc__SuccessResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__success_response__pack_to_buffer
                     (const SiToro__Sinc__SuccessResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SuccessResponse *
       si_toro__sinc__success_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__success_response__free_unpacked
                     (SiToro__Sinc__SuccessResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__PingCommand methods */
void   si_toro__sinc__ping_command__init
                     (SiToro__Sinc__PingCommand         *message);
size_t si_toro__sinc__ping_command__get_packed_size
                     (const SiToro__Sinc__PingCommand   *message);
size_t si_toro__sinc__ping_command__pack
                     (const SiToro__Sinc__PingCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__ping_command__pack_to_buffer
                     (const SiToro__Sinc__PingCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__PingCommand *
       si_toro__sinc__ping_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__ping_command__free_unpacked
                     (SiToro__Sinc__PingCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__KeyValue methods */
void   si_toro__sinc__key_value__init
                     (SiToro__Sinc__KeyValue         *message);
size_t si_toro__sinc__key_value__get_packed_size
                     (const SiToro__Sinc__KeyValue   *message);
size_t si_toro__sinc__key_value__pack
                     (const SiToro__Sinc__KeyValue   *message,
                      uint8_t             *out);
size_t si_toro__sinc__key_value__pack_to_buffer
                     (const SiToro__Sinc__KeyValue   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__KeyValue *
       si_toro__sinc__key_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__key_value__free_unpacked
                     (SiToro__Sinc__KeyValue *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__GetParamCommand methods */
void   si_toro__sinc__get_param_command__init
                     (SiToro__Sinc__GetParamCommand         *message);
size_t si_toro__sinc__get_param_command__get_packed_size
                     (const SiToro__Sinc__GetParamCommand   *message);
size_t si_toro__sinc__get_param_command__pack
                     (const SiToro__Sinc__GetParamCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__get_param_command__pack_to_buffer
                     (const SiToro__Sinc__GetParamCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__GetParamCommand *
       si_toro__sinc__get_param_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__get_param_command__free_unpacked
                     (SiToro__Sinc__GetParamCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__GetParamResponse methods */
void   si_toro__sinc__get_param_response__init
                     (SiToro__Sinc__GetParamResponse         *message);
size_t si_toro__sinc__get_param_response__get_packed_size
                     (const SiToro__Sinc__GetParamResponse   *message);
size_t si_toro__sinc__get_param_response__pack
                     (const SiToro__Sinc__GetParamResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__get_param_response__pack_to_buffer
                     (const SiToro__Sinc__GetParamResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__GetParamResponse *
       si_toro__sinc__get_param_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__get_param_response__free_unpacked
                     (SiToro__Sinc__GetParamResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__ParamUpdatedResponse methods */
void   si_toro__sinc__param_updated_response__init
                     (SiToro__Sinc__ParamUpdatedResponse         *message);
size_t si_toro__sinc__param_updated_response__get_packed_size
                     (const SiToro__Sinc__ParamUpdatedResponse   *message);
size_t si_toro__sinc__param_updated_response__pack
                     (const SiToro__Sinc__ParamUpdatedResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__param_updated_response__pack_to_buffer
                     (const SiToro__Sinc__ParamUpdatedResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__ParamUpdatedResponse *
       si_toro__sinc__param_updated_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__param_updated_response__free_unpacked
                     (SiToro__Sinc__ParamUpdatedResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SetParamCommand methods */
void   si_toro__sinc__set_param_command__init
                     (SiToro__Sinc__SetParamCommand         *message);
size_t si_toro__sinc__set_param_command__get_packed_size
                     (const SiToro__Sinc__SetParamCommand   *message);
size_t si_toro__sinc__set_param_command__pack
                     (const SiToro__Sinc__SetParamCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__set_param_command__pack_to_buffer
                     (const SiToro__Sinc__SetParamCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SetParamCommand *
       si_toro__sinc__set_param_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__set_param_command__free_unpacked
                     (SiToro__Sinc__SetParamCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__StartHistogramCommand methods */
void   si_toro__sinc__start_histogram_command__init
                     (SiToro__Sinc__StartHistogramCommand         *message);
size_t si_toro__sinc__start_histogram_command__get_packed_size
                     (const SiToro__Sinc__StartHistogramCommand   *message);
size_t si_toro__sinc__start_histogram_command__pack
                     (const SiToro__Sinc__StartHistogramCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__start_histogram_command__pack_to_buffer
                     (const SiToro__Sinc__StartHistogramCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__StartHistogramCommand *
       si_toro__sinc__start_histogram_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__start_histogram_command__free_unpacked
                     (SiToro__Sinc__StartHistogramCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__StartListModeCommand methods */
void   si_toro__sinc__start_list_mode_command__init
                     (SiToro__Sinc__StartListModeCommand         *message);
size_t si_toro__sinc__start_list_mode_command__get_packed_size
                     (const SiToro__Sinc__StartListModeCommand   *message);
size_t si_toro__sinc__start_list_mode_command__pack
                     (const SiToro__Sinc__StartListModeCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__start_list_mode_command__pack_to_buffer
                     (const SiToro__Sinc__StartListModeCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__StartListModeCommand *
       si_toro__sinc__start_list_mode_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__start_list_mode_command__free_unpacked
                     (SiToro__Sinc__StartListModeCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__StartOscilloscopeCommand methods */
void   si_toro__sinc__start_oscilloscope_command__init
                     (SiToro__Sinc__StartOscilloscopeCommand         *message);
size_t si_toro__sinc__start_oscilloscope_command__get_packed_size
                     (const SiToro__Sinc__StartOscilloscopeCommand   *message);
size_t si_toro__sinc__start_oscilloscope_command__pack
                     (const SiToro__Sinc__StartOscilloscopeCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__start_oscilloscope_command__pack_to_buffer
                     (const SiToro__Sinc__StartOscilloscopeCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__StartOscilloscopeCommand *
       si_toro__sinc__start_oscilloscope_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__start_oscilloscope_command__free_unpacked
                     (SiToro__Sinc__StartOscilloscopeCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__HistogramDataResponse methods */
void   si_toro__sinc__histogram_data_response__init
                     (SiToro__Sinc__HistogramDataResponse         *message);
size_t si_toro__sinc__histogram_data_response__get_packed_size
                     (const SiToro__Sinc__HistogramDataResponse   *message);
size_t si_toro__sinc__histogram_data_response__pack
                     (const SiToro__Sinc__HistogramDataResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__histogram_data_response__pack_to_buffer
                     (const SiToro__Sinc__HistogramDataResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__HistogramDataResponse *
       si_toro__sinc__histogram_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__histogram_data_response__free_unpacked
                     (SiToro__Sinc__HistogramDataResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__ListModeDataResponse methods */
void   si_toro__sinc__list_mode_data_response__init
                     (SiToro__Sinc__ListModeDataResponse         *message);
size_t si_toro__sinc__list_mode_data_response__get_packed_size
                     (const SiToro__Sinc__ListModeDataResponse   *message);
size_t si_toro__sinc__list_mode_data_response__pack
                     (const SiToro__Sinc__ListModeDataResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__list_mode_data_response__pack_to_buffer
                     (const SiToro__Sinc__ListModeDataResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__ListModeDataResponse *
       si_toro__sinc__list_mode_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__list_mode_data_response__free_unpacked
                     (SiToro__Sinc__ListModeDataResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__OscilloscopePlot methods */
void   si_toro__sinc__oscilloscope_plot__init
                     (SiToro__Sinc__OscilloscopePlot         *message);
size_t si_toro__sinc__oscilloscope_plot__get_packed_size
                     (const SiToro__Sinc__OscilloscopePlot   *message);
size_t si_toro__sinc__oscilloscope_plot__pack
                     (const SiToro__Sinc__OscilloscopePlot   *message,
                      uint8_t             *out);
size_t si_toro__sinc__oscilloscope_plot__pack_to_buffer
                     (const SiToro__Sinc__OscilloscopePlot   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__OscilloscopePlot *
       si_toro__sinc__oscilloscope_plot__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__oscilloscope_plot__free_unpacked
                     (SiToro__Sinc__OscilloscopePlot *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__OscilloscopeDataResponse methods */
void   si_toro__sinc__oscilloscope_data_response__init
                     (SiToro__Sinc__OscilloscopeDataResponse         *message);
size_t si_toro__sinc__oscilloscope_data_response__get_packed_size
                     (const SiToro__Sinc__OscilloscopeDataResponse   *message);
size_t si_toro__sinc__oscilloscope_data_response__pack
                     (const SiToro__Sinc__OscilloscopeDataResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__oscilloscope_data_response__pack_to_buffer
                     (const SiToro__Sinc__OscilloscopeDataResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__OscilloscopeDataResponse *
       si_toro__sinc__oscilloscope_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__oscilloscope_data_response__free_unpacked
                     (SiToro__Sinc__OscilloscopeDataResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__StopDataAcquisitionCommand methods */
void   si_toro__sinc__stop_data_acquisition_command__init
                     (SiToro__Sinc__StopDataAcquisitionCommand         *message);
size_t si_toro__sinc__stop_data_acquisition_command__get_packed_size
                     (const SiToro__Sinc__StopDataAcquisitionCommand   *message);
size_t si_toro__sinc__stop_data_acquisition_command__pack
                     (const SiToro__Sinc__StopDataAcquisitionCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__stop_data_acquisition_command__pack_to_buffer
                     (const SiToro__Sinc__StopDataAcquisitionCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__StopDataAcquisitionCommand *
       si_toro__sinc__stop_data_acquisition_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__stop_data_acquisition_command__free_unpacked
                     (SiToro__Sinc__StopDataAcquisitionCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__ClearHistogramCommand methods */
void   si_toro__sinc__clear_histogram_command__init
                     (SiToro__Sinc__ClearHistogramCommand         *message);
size_t si_toro__sinc__clear_histogram_command__get_packed_size
                     (const SiToro__Sinc__ClearHistogramCommand   *message);
size_t si_toro__sinc__clear_histogram_command__pack
                     (const SiToro__Sinc__ClearHistogramCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__clear_histogram_command__pack_to_buffer
                     (const SiToro__Sinc__ClearHistogramCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__ClearHistogramCommand *
       si_toro__sinc__clear_histogram_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__clear_histogram_command__free_unpacked
                     (SiToro__Sinc__ClearHistogramCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__ResetSpatialSystemCommand methods */
void   si_toro__sinc__reset_spatial_system_command__init
                     (SiToro__Sinc__ResetSpatialSystemCommand         *message);
size_t si_toro__sinc__reset_spatial_system_command__get_packed_size
                     (const SiToro__Sinc__ResetSpatialSystemCommand   *message);
size_t si_toro__sinc__reset_spatial_system_command__pack
                     (const SiToro__Sinc__ResetSpatialSystemCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__reset_spatial_system_command__pack_to_buffer
                     (const SiToro__Sinc__ResetSpatialSystemCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__ResetSpatialSystemCommand *
       si_toro__sinc__reset_spatial_system_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__reset_spatial_system_command__free_unpacked
                     (SiToro__Sinc__ResetSpatialSystemCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__StartCalibrationCommand methods */
void   si_toro__sinc__start_calibration_command__init
                     (SiToro__Sinc__StartCalibrationCommand         *message);
size_t si_toro__sinc__start_calibration_command__get_packed_size
                     (const SiToro__Sinc__StartCalibrationCommand   *message);
size_t si_toro__sinc__start_calibration_command__pack
                     (const SiToro__Sinc__StartCalibrationCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__start_calibration_command__pack_to_buffer
                     (const SiToro__Sinc__StartCalibrationCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__StartCalibrationCommand *
       si_toro__sinc__start_calibration_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__start_calibration_command__free_unpacked
                     (SiToro__Sinc__StartCalibrationCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__CalibrationProgressResponse methods */
void   si_toro__sinc__calibration_progress_response__init
                     (SiToro__Sinc__CalibrationProgressResponse         *message);
size_t si_toro__sinc__calibration_progress_response__get_packed_size
                     (const SiToro__Sinc__CalibrationProgressResponse   *message);
size_t si_toro__sinc__calibration_progress_response__pack
                     (const SiToro__Sinc__CalibrationProgressResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__calibration_progress_response__pack_to_buffer
                     (const SiToro__Sinc__CalibrationProgressResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__CalibrationProgressResponse *
       si_toro__sinc__calibration_progress_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__calibration_progress_response__free_unpacked
                     (SiToro__Sinc__CalibrationProgressResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__GetCalibrationCommand methods */
void   si_toro__sinc__get_calibration_command__init
                     (SiToro__Sinc__GetCalibrationCommand         *message);
size_t si_toro__sinc__get_calibration_command__get_packed_size
                     (const SiToro__Sinc__GetCalibrationCommand   *message);
size_t si_toro__sinc__get_calibration_command__pack
                     (const SiToro__Sinc__GetCalibrationCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__get_calibration_command__pack_to_buffer
                     (const SiToro__Sinc__GetCalibrationCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__GetCalibrationCommand *
       si_toro__sinc__get_calibration_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__get_calibration_command__free_unpacked
                     (SiToro__Sinc__GetCalibrationCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__GetCalibrationResponse methods */
void   si_toro__sinc__get_calibration_response__init
                     (SiToro__Sinc__GetCalibrationResponse         *message);
size_t si_toro__sinc__get_calibration_response__get_packed_size
                     (const SiToro__Sinc__GetCalibrationResponse   *message);
size_t si_toro__sinc__get_calibration_response__pack
                     (const SiToro__Sinc__GetCalibrationResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__get_calibration_response__pack_to_buffer
                     (const SiToro__Sinc__GetCalibrationResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__GetCalibrationResponse *
       si_toro__sinc__get_calibration_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__get_calibration_response__free_unpacked
                     (SiToro__Sinc__GetCalibrationResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SetCalibrationCommand methods */
void   si_toro__sinc__set_calibration_command__init
                     (SiToro__Sinc__SetCalibrationCommand         *message);
size_t si_toro__sinc__set_calibration_command__get_packed_size
                     (const SiToro__Sinc__SetCalibrationCommand   *message);
size_t si_toro__sinc__set_calibration_command__pack
                     (const SiToro__Sinc__SetCalibrationCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__set_calibration_command__pack_to_buffer
                     (const SiToro__Sinc__SetCalibrationCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SetCalibrationCommand *
       si_toro__sinc__set_calibration_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__set_calibration_command__free_unpacked
                     (SiToro__Sinc__SetCalibrationCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__CalculateDcOffsetCommand methods */
void   si_toro__sinc__calculate_dc_offset_command__init
                     (SiToro__Sinc__CalculateDcOffsetCommand         *message);
size_t si_toro__sinc__calculate_dc_offset_command__get_packed_size
                     (const SiToro__Sinc__CalculateDcOffsetCommand   *message);
size_t si_toro__sinc__calculate_dc_offset_command__pack
                     (const SiToro__Sinc__CalculateDcOffsetCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__calculate_dc_offset_command__pack_to_buffer
                     (const SiToro__Sinc__CalculateDcOffsetCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__CalculateDcOffsetCommand *
       si_toro__sinc__calculate_dc_offset_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__calculate_dc_offset_command__free_unpacked
                     (SiToro__Sinc__CalculateDcOffsetCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__CalculateDcOffsetResponse methods */
void   si_toro__sinc__calculate_dc_offset_response__init
                     (SiToro__Sinc__CalculateDcOffsetResponse         *message);
size_t si_toro__sinc__calculate_dc_offset_response__get_packed_size
                     (const SiToro__Sinc__CalculateDcOffsetResponse   *message);
size_t si_toro__sinc__calculate_dc_offset_response__pack
                     (const SiToro__Sinc__CalculateDcOffsetResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__calculate_dc_offset_response__pack_to_buffer
                     (const SiToro__Sinc__CalculateDcOffsetResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__CalculateDcOffsetResponse *
       si_toro__sinc__calculate_dc_offset_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__calculate_dc_offset_response__free_unpacked
                     (SiToro__Sinc__CalculateDcOffsetResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__ListParamDetailsCommand methods */
void   si_toro__sinc__list_param_details_command__init
                     (SiToro__Sinc__ListParamDetailsCommand         *message);
size_t si_toro__sinc__list_param_details_command__get_packed_size
                     (const SiToro__Sinc__ListParamDetailsCommand   *message);
size_t si_toro__sinc__list_param_details_command__pack
                     (const SiToro__Sinc__ListParamDetailsCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__list_param_details_command__pack_to_buffer
                     (const SiToro__Sinc__ListParamDetailsCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__ListParamDetailsCommand *
       si_toro__sinc__list_param_details_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__list_param_details_command__free_unpacked
                     (SiToro__Sinc__ListParamDetailsCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__ParamDetails methods */
void   si_toro__sinc__param_details__init
                     (SiToro__Sinc__ParamDetails         *message);
size_t si_toro__sinc__param_details__get_packed_size
                     (const SiToro__Sinc__ParamDetails   *message);
size_t si_toro__sinc__param_details__pack
                     (const SiToro__Sinc__ParamDetails   *message,
                      uint8_t             *out);
size_t si_toro__sinc__param_details__pack_to_buffer
                     (const SiToro__Sinc__ParamDetails   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__ParamDetails *
       si_toro__sinc__param_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__param_details__free_unpacked
                     (SiToro__Sinc__ParamDetails *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__ListParamDetailsResponse methods */
void   si_toro__sinc__list_param_details_response__init
                     (SiToro__Sinc__ListParamDetailsResponse         *message);
size_t si_toro__sinc__list_param_details_response__get_packed_size
                     (const SiToro__Sinc__ListParamDetailsResponse   *message);
size_t si_toro__sinc__list_param_details_response__pack
                     (const SiToro__Sinc__ListParamDetailsResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__list_param_details_response__pack_to_buffer
                     (const SiToro__Sinc__ListParamDetailsResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__ListParamDetailsResponse *
       si_toro__sinc__list_param_details_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__list_param_details_response__free_unpacked
                     (SiToro__Sinc__ListParamDetailsResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__StartFFTCommand methods */
void   si_toro__sinc__start_fftcommand__init
                     (SiToro__Sinc__StartFFTCommand         *message);
size_t si_toro__sinc__start_fftcommand__get_packed_size
                     (const SiToro__Sinc__StartFFTCommand   *message);
size_t si_toro__sinc__start_fftcommand__pack
                     (const SiToro__Sinc__StartFFTCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__start_fftcommand__pack_to_buffer
                     (const SiToro__Sinc__StartFFTCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__StartFFTCommand *
       si_toro__sinc__start_fftcommand__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__start_fftcommand__free_unpacked
                     (SiToro__Sinc__StartFFTCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__RestartCommand methods */
void   si_toro__sinc__restart_command__init
                     (SiToro__Sinc__RestartCommand         *message);
size_t si_toro__sinc__restart_command__get_packed_size
                     (const SiToro__Sinc__RestartCommand   *message);
size_t si_toro__sinc__restart_command__pack
                     (const SiToro__Sinc__RestartCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__restart_command__pack_to_buffer
                     (const SiToro__Sinc__RestartCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__RestartCommand *
       si_toro__sinc__restart_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__restart_command__free_unpacked
                     (SiToro__Sinc__RestartCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SoftwareUpdateFile methods */
void   si_toro__sinc__software_update_file__init
                     (SiToro__Sinc__SoftwareUpdateFile         *message);
size_t si_toro__sinc__software_update_file__get_packed_size
                     (const SiToro__Sinc__SoftwareUpdateFile   *message);
size_t si_toro__sinc__software_update_file__pack
                     (const SiToro__Sinc__SoftwareUpdateFile   *message,
                      uint8_t             *out);
size_t si_toro__sinc__software_update_file__pack_to_buffer
                     (const SiToro__Sinc__SoftwareUpdateFile   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SoftwareUpdateFile *
       si_toro__sinc__software_update_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__software_update_file__free_unpacked
                     (SiToro__Sinc__SoftwareUpdateFile *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SoftwareUpdateCommand methods */
void   si_toro__sinc__software_update_command__init
                     (SiToro__Sinc__SoftwareUpdateCommand         *message);
size_t si_toro__sinc__software_update_command__get_packed_size
                     (const SiToro__Sinc__SoftwareUpdateCommand   *message);
size_t si_toro__sinc__software_update_command__pack
                     (const SiToro__Sinc__SoftwareUpdateCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__software_update_command__pack_to_buffer
                     (const SiToro__Sinc__SoftwareUpdateCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SoftwareUpdateCommand *
       si_toro__sinc__software_update_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__software_update_command__free_unpacked
                     (SiToro__Sinc__SoftwareUpdateCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SoftwareUpdateCompleteResponse methods */
void   si_toro__sinc__software_update_complete_response__init
                     (SiToro__Sinc__SoftwareUpdateCompleteResponse         *message);
size_t si_toro__sinc__software_update_complete_response__get_packed_size
                     (const SiToro__Sinc__SoftwareUpdateCompleteResponse   *message);
size_t si_toro__sinc__software_update_complete_response__pack
                     (const SiToro__Sinc__SoftwareUpdateCompleteResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__software_update_complete_response__pack_to_buffer
                     (const SiToro__Sinc__SoftwareUpdateCompleteResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SoftwareUpdateCompleteResponse *
       si_toro__sinc__software_update_complete_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__software_update_complete_response__free_unpacked
                     (SiToro__Sinc__SoftwareUpdateCompleteResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SaveConfigurationCommand methods */
void   si_toro__sinc__save_configuration_command__init
                     (SiToro__Sinc__SaveConfigurationCommand         *message);
size_t si_toro__sinc__save_configuration_command__get_packed_size
                     (const SiToro__Sinc__SaveConfigurationCommand   *message);
size_t si_toro__sinc__save_configuration_command__pack
                     (const SiToro__Sinc__SaveConfigurationCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__save_configuration_command__pack_to_buffer
                     (const SiToro__Sinc__SaveConfigurationCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SaveConfigurationCommand *
       si_toro__sinc__save_configuration_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__save_configuration_command__free_unpacked
                     (SiToro__Sinc__SaveConfigurationCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__AsynchronousErrorResponse methods */
void   si_toro__sinc__asynchronous_error_response__init
                     (SiToro__Sinc__AsynchronousErrorResponse         *message);
size_t si_toro__sinc__asynchronous_error_response__get_packed_size
                     (const SiToro__Sinc__AsynchronousErrorResponse   *message);
size_t si_toro__sinc__asynchronous_error_response__pack
                     (const SiToro__Sinc__AsynchronousErrorResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__asynchronous_error_response__pack_to_buffer
                     (const SiToro__Sinc__AsynchronousErrorResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__AsynchronousErrorResponse *
       si_toro__sinc__asynchronous_error_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__asynchronous_error_response__free_unpacked
                     (SiToro__Sinc__AsynchronousErrorResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__MonitorChannelsCommand methods */
void   si_toro__sinc__monitor_channels_command__init
                     (SiToro__Sinc__MonitorChannelsCommand         *message);
size_t si_toro__sinc__monitor_channels_command__get_packed_size
                     (const SiToro__Sinc__MonitorChannelsCommand   *message);
size_t si_toro__sinc__monitor_channels_command__pack
                     (const SiToro__Sinc__MonitorChannelsCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__monitor_channels_command__pack_to_buffer
                     (const SiToro__Sinc__MonitorChannelsCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__MonitorChannelsCommand *
       si_toro__sinc__monitor_channels_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__monitor_channels_command__free_unpacked
                     (SiToro__Sinc__MonitorChannelsCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__ProbeDatagramCommand methods */
void   si_toro__sinc__probe_datagram_command__init
                     (SiToro__Sinc__ProbeDatagramCommand         *message);
size_t si_toro__sinc__probe_datagram_command__get_packed_size
                     (const SiToro__Sinc__ProbeDatagramCommand   *message);
size_t si_toro__sinc__probe_datagram_command__pack
                     (const SiToro__Sinc__ProbeDatagramCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__probe_datagram_command__pack_to_buffer
                     (const SiToro__Sinc__ProbeDatagramCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__ProbeDatagramCommand *
       si_toro__sinc__probe_datagram_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__probe_datagram_command__free_unpacked
                     (SiToro__Sinc__ProbeDatagramCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__DownloadCrashDumpCommand methods */
void   si_toro__sinc__download_crash_dump_command__init
                     (SiToro__Sinc__DownloadCrashDumpCommand         *message);
size_t si_toro__sinc__download_crash_dump_command__get_packed_size
                     (const SiToro__Sinc__DownloadCrashDumpCommand   *message);
size_t si_toro__sinc__download_crash_dump_command__pack
                     (const SiToro__Sinc__DownloadCrashDumpCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__download_crash_dump_command__pack_to_buffer
                     (const SiToro__Sinc__DownloadCrashDumpCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__DownloadCrashDumpCommand *
       si_toro__sinc__download_crash_dump_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__download_crash_dump_command__free_unpacked
                     (SiToro__Sinc__DownloadCrashDumpCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__DownloadCrashDumpResponse methods */
void   si_toro__sinc__download_crash_dump_response__init
                     (SiToro__Sinc__DownloadCrashDumpResponse         *message);
size_t si_toro__sinc__download_crash_dump_response__get_packed_size
                     (const SiToro__Sinc__DownloadCrashDumpResponse   *message);
size_t si_toro__sinc__download_crash_dump_response__pack
                     (const SiToro__Sinc__DownloadCrashDumpResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__download_crash_dump_response__pack_to_buffer
                     (const SiToro__Sinc__DownloadCrashDumpResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__DownloadCrashDumpResponse *
       si_toro__sinc__download_crash_dump_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__download_crash_dump_response__free_unpacked
                     (SiToro__Sinc__DownloadCrashDumpResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__CheckParamConsistencyCommand methods */
void   si_toro__sinc__check_param_consistency_command__init
                     (SiToro__Sinc__CheckParamConsistencyCommand         *message);
size_t si_toro__sinc__check_param_consistency_command__get_packed_size
                     (const SiToro__Sinc__CheckParamConsistencyCommand   *message);
size_t si_toro__sinc__check_param_consistency_command__pack
                     (const SiToro__Sinc__CheckParamConsistencyCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__check_param_consistency_command__pack_to_buffer
                     (const SiToro__Sinc__CheckParamConsistencyCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__CheckParamConsistencyCommand *
       si_toro__sinc__check_param_consistency_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__check_param_consistency_command__free_unpacked
                     (SiToro__Sinc__CheckParamConsistencyCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__CheckParamConsistencyResponse methods */
void   si_toro__sinc__check_param_consistency_response__init
                     (SiToro__Sinc__CheckParamConsistencyResponse         *message);
size_t si_toro__sinc__check_param_consistency_response__get_packed_size
                     (const SiToro__Sinc__CheckParamConsistencyResponse   *message);
size_t si_toro__sinc__check_param_consistency_response__pack
                     (const SiToro__Sinc__CheckParamConsistencyResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__check_param_consistency_response__pack_to_buffer
                     (const SiToro__Sinc__CheckParamConsistencyResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__CheckParamConsistencyResponse *
       si_toro__sinc__check_param_consistency_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__check_param_consistency_response__free_unpacked
                     (SiToro__Sinc__CheckParamConsistencyResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__TriggerHistogramCommand methods */
void   si_toro__sinc__trigger_histogram_command__init
                     (SiToro__Sinc__TriggerHistogramCommand         *message);
size_t si_toro__sinc__trigger_histogram_command__get_packed_size
                     (const SiToro__Sinc__TriggerHistogramCommand   *message);
size_t si_toro__sinc__trigger_histogram_command__pack
                     (const SiToro__Sinc__TriggerHistogramCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__trigger_histogram_command__pack_to_buffer
                     (const SiToro__Sinc__TriggerHistogramCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__TriggerHistogramCommand *
       si_toro__sinc__trigger_histogram_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__trigger_histogram_command__free_unpacked
                     (SiToro__Sinc__TriggerHistogramCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__Timestamp methods */
void   si_toro__sinc__timestamp__init
                     (SiToro__Sinc__Timestamp         *message);
size_t si_toro__sinc__timestamp__get_packed_size
                     (const SiToro__Sinc__Timestamp   *message);
size_t si_toro__sinc__timestamp__pack
                     (const SiToro__Sinc__Timestamp   *message,
                      uint8_t             *out);
size_t si_toro__sinc__timestamp__pack_to_buffer
                     (const SiToro__Sinc__Timestamp   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__Timestamp *
       si_toro__sinc__timestamp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__timestamp__free_unpacked
                     (SiToro__Sinc__Timestamp *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SynchronizeLogCommand methods */
void   si_toro__sinc__synchronize_log_command__init
                     (SiToro__Sinc__SynchronizeLogCommand         *message);
size_t si_toro__sinc__synchronize_log_command__get_packed_size
                     (const SiToro__Sinc__SynchronizeLogCommand   *message);
size_t si_toro__sinc__synchronize_log_command__pack
                     (const SiToro__Sinc__SynchronizeLogCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__synchronize_log_command__pack_to_buffer
                     (const SiToro__Sinc__SynchronizeLogCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SynchronizeLogCommand *
       si_toro__sinc__synchronize_log_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__synchronize_log_command__free_unpacked
                     (SiToro__Sinc__SynchronizeLogCommand *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__LogEntry methods */
void   si_toro__sinc__log_entry__init
                     (SiToro__Sinc__LogEntry         *message);
size_t si_toro__sinc__log_entry__get_packed_size
                     (const SiToro__Sinc__LogEntry   *message);
size_t si_toro__sinc__log_entry__pack
                     (const SiToro__Sinc__LogEntry   *message,
                      uint8_t             *out);
size_t si_toro__sinc__log_entry__pack_to_buffer
                     (const SiToro__Sinc__LogEntry   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__LogEntry *
       si_toro__sinc__log_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__log_entry__free_unpacked
                     (SiToro__Sinc__LogEntry *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SynchronizeLogResponse methods */
void   si_toro__sinc__synchronize_log_response__init
                     (SiToro__Sinc__SynchronizeLogResponse         *message);
size_t si_toro__sinc__synchronize_log_response__get_packed_size
                     (const SiToro__Sinc__SynchronizeLogResponse   *message);
size_t si_toro__sinc__synchronize_log_response__pack
                     (const SiToro__Sinc__SynchronizeLogResponse   *message,
                      uint8_t             *out);
size_t si_toro__sinc__synchronize_log_response__pack_to_buffer
                     (const SiToro__Sinc__SynchronizeLogResponse   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SynchronizeLogResponse *
       si_toro__sinc__synchronize_log_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__synchronize_log_response__free_unpacked
                     (SiToro__Sinc__SynchronizeLogResponse *message,
                      ProtobufCAllocator *allocator);
/* SiToro__Sinc__SetTimeCommand methods */
void   si_toro__sinc__set_time_command__init
                     (SiToro__Sinc__SetTimeCommand         *message);
size_t si_toro__sinc__set_time_command__get_packed_size
                     (const SiToro__Sinc__SetTimeCommand   *message);
size_t si_toro__sinc__set_time_command__pack
                     (const SiToro__Sinc__SetTimeCommand   *message,
                      uint8_t             *out);
size_t si_toro__sinc__set_time_command__pack_to_buffer
                     (const SiToro__Sinc__SetTimeCommand   *message,
                      ProtobufCBuffer     *buffer);
SiToro__Sinc__SetTimeCommand *
       si_toro__sinc__set_time_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   si_toro__sinc__set_time_command__free_unpacked
                     (SiToro__Sinc__SetTimeCommand *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SiToro__Sinc__SuccessResponse_Closure)
                 (const SiToro__Sinc__SuccessResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__PingCommand_Closure)
                 (const SiToro__Sinc__PingCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__KeyValue_Closure)
                 (const SiToro__Sinc__KeyValue *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__GetParamCommand_Closure)
                 (const SiToro__Sinc__GetParamCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__GetParamResponse_Closure)
                 (const SiToro__Sinc__GetParamResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__ParamUpdatedResponse_Closure)
                 (const SiToro__Sinc__ParamUpdatedResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SetParamCommand_Closure)
                 (const SiToro__Sinc__SetParamCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__StartHistogramCommand_Closure)
                 (const SiToro__Sinc__StartHistogramCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__StartListModeCommand_Closure)
                 (const SiToro__Sinc__StartListModeCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__StartOscilloscopeCommand_Closure)
                 (const SiToro__Sinc__StartOscilloscopeCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__HistogramDataResponse_Closure)
                 (const SiToro__Sinc__HistogramDataResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__ListModeDataResponse_Closure)
                 (const SiToro__Sinc__ListModeDataResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__OscilloscopePlot_Closure)
                 (const SiToro__Sinc__OscilloscopePlot *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__OscilloscopeDataResponse_Closure)
                 (const SiToro__Sinc__OscilloscopeDataResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__StopDataAcquisitionCommand_Closure)
                 (const SiToro__Sinc__StopDataAcquisitionCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__ClearHistogramCommand_Closure)
                 (const SiToro__Sinc__ClearHistogramCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__ResetSpatialSystemCommand_Closure)
                 (const SiToro__Sinc__ResetSpatialSystemCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__StartCalibrationCommand_Closure)
                 (const SiToro__Sinc__StartCalibrationCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__CalibrationProgressResponse_Closure)
                 (const SiToro__Sinc__CalibrationProgressResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__GetCalibrationCommand_Closure)
                 (const SiToro__Sinc__GetCalibrationCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__GetCalibrationResponse_Closure)
                 (const SiToro__Sinc__GetCalibrationResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SetCalibrationCommand_Closure)
                 (const SiToro__Sinc__SetCalibrationCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__CalculateDcOffsetCommand_Closure)
                 (const SiToro__Sinc__CalculateDcOffsetCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__CalculateDcOffsetResponse_Closure)
                 (const SiToro__Sinc__CalculateDcOffsetResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__ListParamDetailsCommand_Closure)
                 (const SiToro__Sinc__ListParamDetailsCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__ParamDetails_Closure)
                 (const SiToro__Sinc__ParamDetails *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__ListParamDetailsResponse_Closure)
                 (const SiToro__Sinc__ListParamDetailsResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__StartFFTCommand_Closure)
                 (const SiToro__Sinc__StartFFTCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__RestartCommand_Closure)
                 (const SiToro__Sinc__RestartCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SoftwareUpdateFile_Closure)
                 (const SiToro__Sinc__SoftwareUpdateFile *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SoftwareUpdateCommand_Closure)
                 (const SiToro__Sinc__SoftwareUpdateCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SoftwareUpdateCompleteResponse_Closure)
                 (const SiToro__Sinc__SoftwareUpdateCompleteResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SaveConfigurationCommand_Closure)
                 (const SiToro__Sinc__SaveConfigurationCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__AsynchronousErrorResponse_Closure)
                 (const SiToro__Sinc__AsynchronousErrorResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__MonitorChannelsCommand_Closure)
                 (const SiToro__Sinc__MonitorChannelsCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__ProbeDatagramCommand_Closure)
                 (const SiToro__Sinc__ProbeDatagramCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__DownloadCrashDumpCommand_Closure)
                 (const SiToro__Sinc__DownloadCrashDumpCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__DownloadCrashDumpResponse_Closure)
                 (const SiToro__Sinc__DownloadCrashDumpResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__CheckParamConsistencyCommand_Closure)
                 (const SiToro__Sinc__CheckParamConsistencyCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__CheckParamConsistencyResponse_Closure)
                 (const SiToro__Sinc__CheckParamConsistencyResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__TriggerHistogramCommand_Closure)
                 (const SiToro__Sinc__TriggerHistogramCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__Timestamp_Closure)
                 (const SiToro__Sinc__Timestamp *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SynchronizeLogCommand_Closure)
                 (const SiToro__Sinc__SynchronizeLogCommand *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__LogEntry_Closure)
                 (const SiToro__Sinc__LogEntry *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SynchronizeLogResponse_Closure)
                 (const SiToro__Sinc__SynchronizeLogResponse *message,
                  void *closure_data);
typedef void (*SiToro__Sinc__SetTimeCommand_Closure)
                 (const SiToro__Sinc__SetTimeCommand *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    si_toro__sinc__error_code__descriptor;
extern const ProtobufCEnumDescriptor    si_toro__sinc__message_type__descriptor;
extern const ProtobufCEnumDescriptor    si_toro__sinc__subsystem__descriptor;
extern const ProtobufCEnumDescriptor    si_toro__sinc__histogram_trigger__descriptor;
extern const ProtobufCEnumDescriptor    si_toro__sinc__log_level__descriptor;
extern const ProtobufCEnumDescriptor    si_toro__sinc__si_toro__histogram_mode__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__success_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__ping_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__key_value__descriptor;
extern const ProtobufCEnumDescriptor    si_toro__sinc__key_value__param_type__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__get_param_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__get_param_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__param_updated_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__set_param_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__start_histogram_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__start_list_mode_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__start_oscilloscope_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__histogram_data_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__list_mode_data_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__oscilloscope_plot__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__oscilloscope_data_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__stop_data_acquisition_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__clear_histogram_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__reset_spatial_system_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__start_calibration_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__calibration_progress_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__get_calibration_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__get_calibration_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__set_calibration_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__calculate_dc_offset_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__calculate_dc_offset_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__list_param_details_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__param_details__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__list_param_details_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__start_fftcommand__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__restart_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__software_update_file__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__software_update_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__software_update_complete_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__save_configuration_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__asynchronous_error_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__monitor_channels_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__probe_datagram_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__download_crash_dump_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__download_crash_dump_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__check_param_consistency_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__check_param_consistency_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__trigger_histogram_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__timestamp__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__synchronize_log_command__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__log_entry__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__synchronize_log_response__descriptor;
extern const ProtobufCMessageDescriptor si_toro__sinc__set_time_command__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_sinc_2eproto__INCLUDED */
